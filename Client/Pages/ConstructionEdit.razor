@using ChintaiApp.Shared.Models
@using System.ComponentModel
@using System.Text.Json;
@inject HttpClient Http
@inject NotificationService Notice

@if (Construction == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Form Model="@Construction" OnFinish="CreateOrUpdate" LabelColSpan="5" WrapperColSpan="10">
        @{
            if(@context.ConstructionId !=0 ){
                <FormItem Label="施工履歴ID">
                    @context.ConstructionId
                </FormItem>
            }
        }
        <FormItem Label="建物ID">
            <Input @bind-Value="@context.BuildingId" />
        </FormItem>
        <FormItem Label="部屋ID">
            <Input @bind-Value="@context.RoomId" />
        </FormItem>
        <!---
        <FormItem Label="業者ID">
            <Input @bind-Value="@context.CompanyId" />
        </FormItem>
        -->
        <FormItem Label="施工日">
            <Input @bind-Value="@context.ConstructedDate" />
        </FormItem>
        <FormItem Label="施工タイトル">
            <Input @bind-Value="@context.ConstructionTitle" />
        </FormItem>
        <FormItem Label="施工費">
            <Input @bind-Value="@context.ConstructionFee" />
        </FormItem>
        <FormItem Label="施工詳細">
            <Input @bind-Value="@context.ConstructionDetail" />
        </FormItem>
        <FormItem Label="評価値">
            <Input @bind-Value="@context.Evalution" />
        </FormItem>
        <FormItem Label="評価詳細">
            <Input @bind-Value="@context.EvalutionDetail" />
        </FormItem>
        <FormItem Label="備考1">
            <TextArea @bind-Value="@context.Memo1" />
        </FormItem>
        <FormItem Label="備考2">
            <TextArea @bind-Value="@context.Memo2" />
        </FormItem>
        @{
            if(@context.ConstructionId !=0 ){
                <FormItem Label="作成日時">
                    @context.CreatedAt
                </FormItem>
                <FormItem Label="作成日時">
                    @context.UpdatedAt
                </FormItem>
            }
        }
        <FormItem WrapperColSpan="24" Style="text-align: center">
            <Button Type="primary" HtmlType="submit">@(@context.ConstructionId == 0 ? "新規作成" : "更新")</Button>
        </FormItem>
    </Form>
}

@code {
    [Parameter]
    public Construction? Construction{ get; set; }

    [Parameter]
    public EventCallback Callback { get; set; }

    private void CreateOrUpdate()
    {
        if(Construction.ConstructionId == 0)
        {
            Create();
        }
        else
        {
            Update();
        }
    }

    private async Task Create()
    {
        var response = await Http.PostAsJsonAsync("api/constructions", Construction);
        var createdJson = await response.Content.ReadAsStringAsync();
        await Callback.InvokeAsync();
        await Notice.Open(new NotificationConfig()
        {
            Message = "更新処理成功",
            Description = createdJson,
            NotificationType = NotificationType.Success
        });
    }

    private async Task Update()
    {
        await Http.PutAsJsonAsync("api/constructions", Construction);

        await Callback.InvokeAsync();
        await Notice.Open(new NotificationConfig()
        {
            Message = "更新処理成功",
            NotificationType = NotificationType.Success
        });
    }

    private async Task OnFinishFailed()
    {
        var message = "";
        if(Construction.ConstructionId == 0)
        {
            message = "新規作成 失敗";
        }
        else
        {
            message ="更新処理 失敗";
        }
        await Notice.Open(new NotificationConfig()
        {
            Message = message,
            NotificationType = NotificationType.Error
        });
    }
}
